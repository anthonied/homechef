

<style>
    .validationMessage {
        color: #f00;
    }

    .customMessage {
        color: #FFA500;
    }
</style>

<div>
    <h2>Chef Login</h2>
    <div id="login">
        <form onsubmit="return false">
            <div class="form-group">
                <label>Email Address</label>
                <input type="text" class="form-control" placeholder="Email Address" data-bind="value: email">
            </div>
            <div class="form-group">
                <label>Password</label>
                <input type="password" class="form-control" placeholder="Password" data-bind="value: password">
            </div>
                                    
            <button data-bind="click: submit" class="btn btn-default">Login</button>
        </form>

    </div>
</div>
@section scripts
{
    <script>
            ko.validation.init({
                    registerExtenders: true,
                    messagesOnModified: true,
                    insertMessages: true,
                    parseInputAttributes: true,
                    messageTemplate: null
        },
           true);

        var chefLoginViewModel = function() {
            var self = this;

            self.email = ko.observable("").extend({ required: true, email: true });
            self.password = ko.observable("").extend({ required: true });

            self.submit = function () {
                console.log(self.errors());
                if (self.errors().length === 0) {
                    sendViewModelToController("Account/AttemptLogin",
                        ko.toJSON(self),
                        function(response) {
                            if (!response) {
                                alert("Login Failed");
                                return;
                            }
                           if (response == "chef") {
                               changeLocation("Chef/Home", true);
                               return;
                           }

                           changeLocation("Customer/Home", true);
                        });
                }
                else {
                    self.errors.showAllMessages();
                }
            }

        }


        var viewModel = new chefLoginViewModel();
        viewModel.errors = ko.validation.group(viewModel);

        ko.applyBindings(viewModel,document.getElementById(login));
    </script>
};