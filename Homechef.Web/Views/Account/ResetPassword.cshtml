<style>
    .validationMessage {
        color: #f00;
    }

    .customMessage {
        color: #FFA500;
    }
</style>
<div>
    <h2>Reset Password</h2>
    <div id="resetpassword">
        <form onsubmit="return false">
            <div class="form-group">
                <label>Email Address</label>
                <input type="text" class="form-control" placeholder="Email Address" data-bind="value: email">
            </div>
            <div class="form-group">
                <label>New Password</label>
                <input type="password" class="form-control" placeholder="New Password" data-bind="value: newpassword">
            </div>
            <div class="form-group">
                <label>Confirm New Password</label>
                <input type="password" class="form-control" placeholder="Confirm New Password" data-bind="value: confirmnewpassword">
            </div>

            <button data-bind="click: submit" class="btn btn-default">Reset Password</button>
        </form>
    </div>
</div>
@section scripts
{
    <script>

        ko.validation.init({
                registerExtenders: true,
                messagesOnModified: true,
                insertMessages: true,
                parseInputAttributes: true,
                messageTemplate: null
            },
            true);

        var ResetPasswordViewModel = function() {
            var self = this;
            self.email = ko.observable("").extend({ required: true, email: true });
            self.newpassword = ko.observable("").extend({ required: true });
            self.confirmnewpassword = ko.observable("").extend({ equal: self.newpassword });
            self.submit = function() {
                console.log(self.errors());
                if (self.errors().length === 0) {

                    sendViewModelToController("Account/ChangePassword",
                        ko.toJSON(self),
                        function() {
                            alert("Password Changed.Please login with new Password");
                            changeLocation("Account/Login", true);
                        });

                }
            
            else
            {
                self.errors.showAllMessages();
            }

        }
        };

        var viewModel = new ResetPasswordViewModel();
        viewModel.errors = ko.validation.group(viewModel);

      ko.applyBindings(viewModel, document.getElementById(resetpassword));
    </script>

}