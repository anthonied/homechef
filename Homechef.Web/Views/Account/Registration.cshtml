<style>
    .validationMessage {
        color: #f00;
    }

    .customMessage {
        color: #FFA500;
    }
</style>
<div>
    <h2>User Registration</h2>
    <div id="userregistration">
        <form onsubmit="return false">
            <div class="form-group">
                <label>Email Address</label>
                <input type="text" class="form-control" placeholder="Email Address" data-bind="value: email">
            </div>
            <div class="form-group">
                <label>Password</label>
                <input type="password" class="form-control" placeholder="Password" data-bind="value: password">
            </div>
            <div class="form-group">
                <label>Choose Registration Option</label>
            </div>
            <div >
                <input type="radio" name="registrationoption" value="chef" data-bind="checked:option " /> I want to become a Chef(Automatically will be a Customer).
            </div>
            <div>
                <input type="radio" name="registrationoption" value="client" data-bind="checked:option" /> I want to become a Customer.
            </div>

            <button data-bind="click: submit" class="btn btn-default">Register</button>
        </form>
    </div>
</div>
@section scripts
{
    <script>
        ko.validation.init({
                registerExtenders: true,
                messagesOnModified: true,
                insertMessages: true,
                parseInputAttributes: true,
                messageTemplate: null
            },
            true);
        var UserRegistrationViewModel = function() {
            var self = this;
            self.email = ko.observable("").extend({ required: true, email: true });
            self.password = ko.observable("")
                .extend({
                    required: true,
                    minLength: 6,
                    maxLength: 12
                    
                });
            self.option = ko.observable("chef").extend({ required: true });
            self.submit = function() {
                console.log(self.errors());
                if (self.errors().length === 0) {
                    sendViewModelToController("Account/Createuser",
                        ko.toJSON(self),
                        function(response) {
                            if (!response) {
                                alert("Please use another email..An account with this email address already created");

                                return;
                            }
                            {
                                alert("Done");
                            }
                        });
                } else {
                    self.errors.showAllMessages();
                }
            }

        }

        var viewModel = new UserRegistrationViewModel();
        viewModel.errors = ko.validation.group(viewModel);

        ko.applyBindings(viewModel, document.getElementById(userregistration));

    </script>
}