@{
    ViewBag.Title = "AddMenu";
}
<style>
    .validationMessage {
        color: #f00;
    }

    .customMessage {
        color: #FFA500;
    }
</style>
<h2>Add Menu</h2>
<div id="menuadd">
    <form onsubmit="return false">
        <div class="form-group">
            <label>Dish Name</label>
            <input type="text" class="form-control" placeholder="Dish Name" data-bind="value: dishname">
        </div>
        <div class="form-group">
            <label>Dish Category</label>
            <select data-bind="options: availableDishCategories,
                   value: dishcategory,
                   optionsCaption: 'Choose category...'"></select>
         
        </div>
        <div class="form-group">
            <label>Select Cuisine</label>
            <select data-bind ="options: availableCuisine,value:cuisinetype, optionsCaption: 'Choose Cuisine...'">
              

            </select>
        </div>
        <div class="form-group">
            <label>Price per portion</label>
            <input type="text" class="form-control" placeholder="Price per portion" data-bind="value: pricepp">
        </div>
        <div class="form-group">
            <label>Currency</label>
            <select data-bind="options: availableCurrency,
                   value: currency,
                   optionsCaption: 'Choose currency...'"></select>

        </div>
        
        <div class="form-group">
        <label>Description about your menu</label>
        <input type="text" class="form-control" placeholder="Description about your menu" data-bind="value: description">
    </div>
    <div class="form-group">
        <label>Dish Image</label>
        <input type="text" class="form-control" placeholder="Dish Image" data-bind="value: dishimage">
    </div>
    <div class="form-group">
        <label>Choose which delivery options you can provide</label>
    </div>
    <div class="form-group">
        <label><input type="checkbox"  data-bind="checked: takeaway ">Take Away</label>

        <label><input type="checkbox" data-bind="checked: dineinwithchef ">Dine in with chef</label>

        <label><input type="checkbox" data-bind="checked: homedelivery " >Home Delivery</label>
    </div>
    <div class="form-group">
        <label>Availability of your Dish</label>
    </div>
    <div class="form-group">
        <input type="radio" name="availability" value="On Request" data-bind="checked:availabilitytype " />On Request
        <input type="radio" name="availability" value="Any Day" data-bind="checked:availabilitytype" />Any Day
    </div>

    <div class="form-group">
        <label>Available Days</label>
    </div>
    <div class="form-group">
        <label><input type="checkbox" data-bind="checked: availableonmonday ">Monday</label>

        <label><input type="checkbox" data-bind="checked: availableontuesday ">Tuesday</label>

        <label><input type="checkbox" data-bind="checked: availableonwednesday " >Wednesday</label>

        <label><input type="checkbox" data-bind="checked: availableonthursday ">Thursday</label>

        <label><input type="checkbox" data-bind="checked: availableonfriday ">Friday</label>

        <label><input type="checkbox" data-bind="checked: availableonsaturday " >Saturday</label>

        <label><input type="checkbox" data-bind="checked: availableonsunday ">Sunday</label>

    </div>

    <div class="form-group">
        <label>Minimum Order</label>
        <input type="text" class="form-control" placeholder="Minimum Order" data-bind="value: orderminimum">
    </div>
    <div class="form-group">
        <label>Maximum Order</label>
        <input type="text" class="form-control" placeholder="Maximum Order" data-bind="value: ordermaximum">
    </div>

    <div class="form-group">
        <label>Order Before (In Hours)</label>
        <input type="text" class="form-control" placeholder="Order Before" data-bind="value: leadtime">
    </div>
        <button data-bind="click: submit" class="btn btn-default">Submit</button>
    </form>
    

</div>
@section scripts


{
    <script>
        ko.validation.init({
                registerExtenders: true,
                messagesOnModified: true,
                insertMessages: true,
                parseInputAttributes: true,
                messageTemplate: null
            },
            true);

            var chef_Id = @Html.Raw(Json.Encode(Model));
            var MenuAddViewModel = function() {
                var self = this;
                self.chef_Id = chef_Id;
                self.dishname = ko.observable("").extend({ required: true });;
                self.availableDishCategories = ["Home Food", "Sweets,Cakes,Cookies", "Party Order","Ice Cream and Desserts","Drinks and Beverages" ,"Others"];
                self.dishcategory = ko.observable("");
                self.availableCuisine = [
                    "African Cusine","Arabian" ,"Chinese", "French", "Mexican", "Italian", "Indian","Thai" ,"Others"
                ];
                self.cuisinetype = ko.observable("");
                self.pricepp = ko.observable("").extend({
                    required: true,
                    number: true
                });
                self.availableCurrency = ["South African Rand"];
                self.currency = ko.observable("");
               
                self.description = ko.observable("");
                self.dishimage = ko.observable("");
                self.takeaway = ko.observable("");
                self.dineinwithchef = ko.observable("");
                self.homedelivery = ko.observable("");
                self.availabilitytype = ko.observable("");
                self.availableonmonday = ko.observable("");
                self.availableontuesday = ko.observable("");
                self.availableonwednesday = ko.observable("");
                self.availableonthursday = ko.observable("");
                self.availableonfriday = ko.observable("");
                self.availableonsaturday = ko.observable("");
                self.availableonsunday = ko.observable("");
                self.orderminimum = ko.observable("").extend({
                    required: true,
                    number: true
                });
                self.ordermaximum = ko.observable("").extend({
                    required: true,
                    number: true,
                    min: self.orderminimum

                });
                self.leadtime = ko.observable("").extend({
                    required: true,
                    number: true
                });


                self.submit = function() {
                    console.log(self.errors());


                    if (self.errors().length === 0) {
                        sendViewModelToController("Menu/Create",
                            ko.toJSON(self),
                            function() {
                                alert("Done");
                                changeLocation("Chef/Home", true);

                            });
                    } else {
                     
                        self.errors.showAllMessages();
                    }
                };

            }

            var viewModel = new MenuAddViewModel();
            viewModel.errors = ko.validation.group(viewModel);

        ko.applyBindings(viewModel, document.getElementById("menuadd"));
    </script>
};
   